{"version":3,"sources":["svDates.js","App.js","serviceWorker.js","index.js"],"names":["svDays","svMonthAbbr","App","props","state","selectedYear","Date","getFullYear","isSticky","myRef","React","createRef","window","addEventListener","handleScroll","passive","bcr","this","current","getBoundingClientRect","y","setState","scrollY","year","dates","date","name","notReallyRed","d","f","slice","getTime","oneDay","getEasterBasedDays","i","getDay","getMidsummerDays","reduce","prev","curr","day","weekDayNo","filter","length","isSqueezeDay","getSqueezeDays","sort","a","b","map","dayName","change","className","ref","onClick","changeYear","getAllDates","getUTCDate","getMonth","toUpperCase","substr","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2aca43bf.chunk.js","sourcesContent":["export const svDays = [\r\n  'söndag',\r\n  'måndag',\r\n  'tisdag',\r\n  'onsdag',\r\n  'torsdag',\r\n  'fredag',\r\n  'lördag',\r\n];\r\n\r\nexport const svMonthAbbr = [\r\n  'jan',\r\n  'feb',\r\n  'mar',\r\n  'apr',\r\n  'maj',\r\n  'jun',\r\n  'jul',\r\n  'aug',\r\n  'sep',\r\n  'okt',\r\n  'nov',\r\n  'dec',\r\n];\r\n\r\nexport const getStaticDates = (year) => [\r\n  {\r\n    date: new Date(year + '-01-01'),\r\n    name: 'Nyårsdagen',\r\n  },\r\n  {\r\n    date: new Date(year + '-01-06'),\r\n    name: 'Trettondedag jul',\r\n  },\r\n  {\r\n    date: new Date(year + '-05-01'),\r\n    name: 'Första maj',\r\n  },\r\n  {\r\n    date: new Date(year + '-06-06'),\r\n    name: 'Nationaldagen',\r\n  },\r\n  {\r\n    date: new Date(year + '-10-31'),\r\n    name: 'Alla helgons dag',\r\n  },\r\n  {\r\n    date: new Date(year + '-12-24'),\r\n    name: 'Julafton',\r\n    notReallyRed: true,\r\n  },\r\n  {\r\n    date: new Date(year + '-12-25'),\r\n    name: 'Juldagen',\r\n  },\r\n  {\r\n    date: new Date(year + '-12-26'),\r\n    name: 'Annandag jul',\r\n  },\r\n  {\r\n    date: new Date(year + '-12-31'),\r\n    name: 'Nyårsafton',\r\n    notReallyRed: true,\r\n  },\r\n];\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { svDays, svMonthAbbr, getStaticDates } from './svDates';\r\n\r\nconst oneDay = 86400000;\r\n\r\nconst getSqueezeDays = (day, dates) => {\r\n  const weekDayNo = day.date.getDay();\r\n  if (weekDayNo === 2 || weekDayNo === 4) {\r\n    const d = new Date(\r\n      day.date.getTime() + oneDay * (weekDayNo === 2 ? -1 : 1)\r\n    );\r\n    if (\r\n      dates.filter((day) => new Date(day.date).getTime() === d.getTime())\r\n        .length === 0 &&\r\n      d.getFullYear() === day.date.getFullYear()\r\n    ) {\r\n      const squeezeDay = {\r\n        date: d,\r\n        isSqueezeDay: true,\r\n        name: 'Klämdag',\r\n      };\r\n      return [day, squeezeDay];\r\n    }\r\n  }\r\n\r\n  return [day];\r\n};\r\n\r\nconst getEasterBasedDays = (year) => {\r\n  // gauss easter formula\r\n  const [a, b, c] = [year % 19, year % 4, year % 7];\r\n  const d = (19 * a + 24) % 30;\r\n  const e = (2 * b + 4 * c + 6 * d + 5) % 7;\r\n  const f = 22 + d + e;\r\n  const date = new Date(\r\n    `${year}-${\r\n      f <= 31 ? '03-' + ('0' + f).slice(-2) : '04-' + ('0' + (f - 31)).slice(-2)\r\n    }`\r\n  );\r\n\r\n  return [\r\n    { name: 'Långfredagen', date: new Date(date.getTime() - oneDay * 2) },\r\n    { name: 'Påskafton', date: new Date(date.getTime() - oneDay) },\r\n    { name: 'Påskdagen', date: date },\r\n    { name: 'Annandag påsk', date: new Date(date.getTime() + oneDay) },\r\n    {\r\n      name: 'Kristihimmelfärdsdag',\r\n      date: new Date(date.getTime() + oneDay * 39),\r\n    },\r\n    { name: 'Pingsdagen', date: new Date(date.getTime() + oneDay * 49) },\r\n  ];\r\n};\r\n\r\nconst getMidsummerDays = (year) => {\r\n  // midsummers day is on a saturday 20-26 june\r\n  for (let i = 20; i <= 26; i++) {\r\n    const date = new Date(year + '-06-' + i);\r\n    if (date.getDay() === 6) {\r\n      return [\r\n        {\r\n          name: 'Midsommarafton',\r\n          date: new Date(date.getTime() - oneDay),\r\n          notReallyRed: true,\r\n        },\r\n        {\r\n          name: 'Midsommardagen',\r\n          date,\r\n        },\r\n      ];\r\n    }\r\n  }\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedYear: new Date().getFullYear(),\r\n      isSticky: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', () => this.handleScroll(), {\r\n      passive: true,\r\n    });\r\n  }\r\n\r\n  handleScroll() {\r\n    const bcr = this.myRef.current.getBoundingClientRect();\r\n    if (!this.state.isSticky && bcr.y < 0) {\r\n      this.setState(() => ({\r\n        ...this.state,\r\n        isSticky: true,\r\n      }));\r\n    } else if (this.state.isSticky && window.scrollY < 56) {\r\n      this.setState(() => ({\r\n        ...this.state,\r\n        isSticky: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  getAllDates() {\r\n    const dates = [\r\n      ...getStaticDates(this.state.selectedYear),\r\n      ...getEasterBasedDays(this.state.selectedYear),\r\n      ...getMidsummerDays(this.state.selectedYear),\r\n    ];\r\n\r\n    return dates\r\n      .reduce((prev, curr) => [...prev, ...getSqueezeDays(curr, dates)], [])\r\n      .sort((a, b) => a.date - b.date)\r\n      .map((day) => ({ ...day, dayName: svDays[day.date.getDay()] }));\r\n  }\r\n\r\n  changeYear(change) {\r\n    this.setState((state) => ({\r\n      ...this.state,\r\n      selectedYear: state.selectedYear + change,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 header p-0\">\r\n            <h1>Röda dagar</h1>\r\n            <div\r\n              className={\r\n                'year-container' + (this.state.isSticky ? ' sticky' : '')\r\n              }\r\n              ref={this.myRef}\r\n            >\r\n              <span\r\n                className=\"year-btn float-left\"\r\n                onClick={() => this.changeYear(-1)}\r\n              >\r\n                &lt;\r\n              </span>\r\n              <div className=\"d-inline-block\">\r\n                {this.state.selectedYear} -{' '}\r\n                {this.getAllDates().filter((date) => date.isSqueezeDay).length}{' '}\r\n                klämdagar\r\n              </div>\r\n              <span\r\n                className=\"year-btn float-right\"\r\n                onClick={() => this.changeYear(1)}\r\n              >\r\n                &gt;\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 p-0\">\r\n              {this.getAllDates()\r\n                // .filter((day) => day.date > new Date())\r\n                .map((day) => (\r\n                  <div\r\n                    className={\r\n                      'day-container d-flex position-relative mb-2 text-left ' +\r\n                      (day.notReallyRed\r\n                        ? 'gray'\r\n                        : day.isSqueezeDay\r\n                        ? 'squeeze'\r\n                        : 'red')\r\n                    }\r\n                  >\r\n                    <div className=\"text-center date-box mr-2\">\r\n                      <h1 className=\"mb-0\">{day.date?.getUTCDate()}</h1>\r\n                      <h4>{svMonthAbbr[day.date.getMonth()]?.toUpperCase()}</h4>\r\n                    </div>\r\n                    <div className=\"date-name\">\r\n                      <h2 className=\"mb-0 pl-3\">{day.name}</h2>\r\n                    </div>\r\n                    <div className=\"day-name\">{day.dayName?.substr(0, 3)}</div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}