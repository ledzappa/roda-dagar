{"version":3,"sources":["components/Header.module.css","svDates.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","svDays","svMonthAbbr","Header","props","state","isSticky","myRef","React","createRef","window","addEventListener","handleScroll","passive","console","log","this","bcr","current","getBoundingClientRect","y","setState","scrollY","className","styles","header","h1","yearContainer","sticky","ref","yearBtn","onClick","changeYear","icon","faChevronLeft","year","squeezeDays","faChevronRight","Component","App","selectedYear","Date","getFullYear","showPastDates","dates","date","name","notReallyRed","d","f","slice","getTime","oneDay","getEasterBasedDays","i","getDay","getMidsummerDays","map","filter","getAllHallowsDays","reduce","prev","curr","day","weekDayNo","length","isSqueezeDay","getSqueezeDays","sort","a","b","dayName","change","getAllDates","faEyeSlash","faEye","index","key","getUTCDate","getMonth","toUpperCase","substr","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d2b71bc9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"h1\":\"Header_h1__86Lt0\",\"header\":\"Header_header__e964W\",\"yearContainer\":\"Header_yearContainer__Q-l27\",\"sticky\":\"Header_sticky__P294C\",\"yearBtn\":\"Header_yearBtn__2qPoY\"};","export const svDays = [\r\n  'söndag',\r\n  'måndag',\r\n  'tisdag',\r\n  'onsdag',\r\n  'torsdag',\r\n  'fredag',\r\n  'lördag',\r\n];\r\n\r\nexport const svMonthAbbr = [\r\n  'jan',\r\n  'feb',\r\n  'mar',\r\n  'apr',\r\n  'maj',\r\n  'jun',\r\n  'jul',\r\n  'aug',\r\n  'sep',\r\n  'okt',\r\n  'nov',\r\n  'dec',\r\n];\r\n\r\nexport const getStaticDates = (year) => [\r\n  {\r\n    date: new Date(year + '-01-01'),\r\n    name: 'Nyårsdagen',\r\n  },\r\n  {\r\n    date: new Date(year + '-01-06'),\r\n    name: 'Trettondedag jul',\r\n  },\r\n  {\r\n    date: new Date(year + '-04-30'),\r\n    name: 'Valborgsmässoafton',\r\n  },\r\n  {\r\n    date: new Date(year + '-05-01'),\r\n    name: 'Första maj',\r\n  },\r\n  {\r\n    date: new Date(year + '-06-06'),\r\n    name: 'Nationaldagen',\r\n  },\r\n  {\r\n    date: new Date(year + '-12-24'),\r\n    name: 'Julafton',\r\n    notReallyRed: true,\r\n  },\r\n  {\r\n    date: new Date(year + '-12-25'),\r\n    name: 'Juldagen',\r\n  },\r\n  {\r\n    date: new Date(year + '-12-26'),\r\n    name: 'Annandag jul',\r\n  },\r\n  {\r\n    date: new Date(year + '-12-31'),\r\n    name: 'Nyårsafton',\r\n    notReallyRed: true,\r\n  },\r\n];\r\n","import React, { Component } from 'react';\r\nimport styles from './Header.module.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSticky: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', () => this.handleScroll(), {\r\n      passive: true,\r\n    });\r\n    console.log(this.state);\r\n  }\r\n\r\n  handleScroll() {\r\n    const bcr = this.myRef.current.getBoundingClientRect();\r\n    if (!this.state.isSticky && bcr.y < 0) {\r\n      this.setState(() => ({\r\n        isSticky: true,\r\n      }));\r\n    } else if (this.state.isSticky && window.scrollY < 56) {\r\n      this.setState(() => ({\r\n        isSticky: false,\r\n      }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className={styles.header + ' col-12 header p-0'}>\r\n          <h1 className={styles.h1}>Röda dagar</h1>\r\n          <div\r\n            className={\r\n              styles.yearContainer +\r\n              ' ' +\r\n              (this.state.isSticky ? styles.sticky : '')\r\n            }\r\n            ref={this.myRef}\r\n          >\r\n            <span\r\n              className={styles.yearBtn + ' float-left'}\r\n              onClick={() => this.props.changeYear(-1)}\r\n            >\r\n              <FontAwesomeIcon icon={faChevronLeft} />\r\n            </span>\r\n            <div className=\"d-inline-block year\">\r\n              {this.props.year} - {this.props.squeezeDays} klämdag\r\n              {this.props.squeezeDays > 1 ? 'ar' : ''}\r\n            </div>\r\n            <span\r\n              className={styles.yearBtn + ' float-right'}\r\n              onClick={() => this.props.changeYear(1)}\r\n            >\r\n              <FontAwesomeIcon icon={faChevronRight} />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { svDays, svMonthAbbr, getStaticDates } from './svDates';\r\nimport Header from './components/Header';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst oneDay = 86400000;\r\n\r\nconst getSqueezeDays = (day, dates) => {\r\n  const weekDayNo = day.date.getDay();\r\n  if (weekDayNo === 2 || weekDayNo === 4) {\r\n    const d = new Date(\r\n      day.date.getTime() + oneDay * (weekDayNo === 2 ? -1 : 1)\r\n    );\r\n    if (\r\n      dates.filter((day) => new Date(day.date).getTime() === d.getTime())\r\n        .length === 0 &&\r\n      d.getFullYear() === day.date.getFullYear()\r\n    ) {\r\n      const squeezeDay = {\r\n        date: d,\r\n        isSqueezeDay: true,\r\n        name: 'Klämdag',\r\n      };\r\n      return [day, squeezeDay];\r\n    }\r\n  }\r\n\r\n  return [day];\r\n};\r\n\r\nconst getEasterBasedDays = (year) => {\r\n  // gauss easter formula\r\n  const [a, b, c] = [year % 19, year % 4, year % 7];\r\n  const d = (19 * a + 24) % 30;\r\n  const e = (2 * b + 4 * c + 6 * d + 5) % 7;\r\n  const f = 22 + d + e;\r\n  const date = new Date(\r\n    `${year}-${\r\n      f <= 31 ? '03-' + ('0' + f).slice(-2) : '04-' + ('0' + (f - 31)).slice(-2)\r\n    }`\r\n  );\r\n\r\n  return [\r\n    { name: 'Långfredagen', date: new Date(date.getTime() - oneDay * 2) },\r\n    { name: 'Påskafton', date: new Date(date.getTime() - oneDay) },\r\n    { name: 'Påskdagen', date: date },\r\n    { name: 'Annandag påsk', date: new Date(date.getTime() + oneDay) },\r\n    {\r\n      name: 'Kristihimmelfärdsdag',\r\n      date: new Date(date.getTime() + oneDay * 39),\r\n    },\r\n    { name: 'Pingsdagen', date: new Date(date.getTime() + oneDay * 49) },\r\n  ];\r\n};\r\n\r\nconst getMidsummerDays = (year) => {\r\n  // midsummers day is on a saturday 20-26 june\r\n  for (let i = 20; i <= 26; i++) {\r\n    const date = new Date(year + '-06-' + i);\r\n    if (date.getDay() === 6) {\r\n      return [\r\n        {\r\n          name: 'Midsommarafton',\r\n          date: new Date(date.getTime() - oneDay),\r\n          notReallyRed: true,\r\n        },\r\n        {\r\n          name: 'Midsommardagen',\r\n          date,\r\n        },\r\n      ];\r\n    }\r\n  }\r\n};\r\n\r\nconst getAllHallowsDays = (year) => {\r\n  return ['10-31', '11-01', '11-02', '11-03', '11-04', '11-05', '11-06']\r\n    .map((date) => new Date(year + '-' + date))\r\n    .filter((date) => date.getDay() === 6)\r\n    .map((date) => {\r\n      return [\r\n        {\r\n          name: 'Alla helgons afton',\r\n          date: new Date(date.getTime() - oneDay),\r\n          notReallyRed: true,\r\n        },\r\n        {\r\n          name: 'Alla helgons dag',\r\n          date,\r\n        },\r\n      ];\r\n    })[0];\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedYear: new Date().getFullYear(),\r\n      showPastDates: false,\r\n    };\r\n  }\r\n\r\n  getAllDates() {\r\n    const dates = [\r\n      ...getStaticDates(this.state.selectedYear),\r\n      ...getEasterBasedDays(this.state.selectedYear),\r\n      ...getMidsummerDays(this.state.selectedYear),\r\n      ...getAllHallowsDays(this.state.selectedYear),\r\n    ];\r\n\r\n    return dates\r\n      .reduce((prev, curr) => [...prev, ...getSqueezeDays(curr, dates)], [])\r\n      .sort((a, b) => a.date - b.date)\r\n      .map((day) => ({ ...day, dayName: svDays[day.date.getDay()] }));\r\n  }\r\n\r\n  changeYear(change) {\r\n    this.setState((state) => ({\r\n      selectedYear: state.selectedYear + change,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header\r\n          squeezeDays={\r\n            this.getAllDates().filter((date) => date.isSqueezeDay).length\r\n          }\r\n          year={this.state.selectedYear}\r\n          changeYear={(change) => this.changeYear(change)}\r\n        ></Header>\r\n        <div className=\"container pt-4\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 p-0 text-center\">\r\n              {this.state.selectedYear === new Date().getFullYear() ? (\r\n                <div\r\n                  className=\"d-inline-block text-right clickable mb-2\"\r\n                  onClick={() =>\r\n                    this.setState({ showPastDates: !this.state.showPastDates })\r\n                  }\r\n                >\r\n                  <FontAwesomeIcon\r\n                    icon={this.state.showPastDates ? faEyeSlash : faEye}\r\n                  />\r\n                  {this.state.showPastDates ? ' Dölj' : ' Visa'} tidigare datum\r\n                </div>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {this.getAllDates()\r\n                .filter(\r\n                  (day) =>\r\n                    day.date > new Date() ||\r\n                    this.state.showPastDates ||\r\n                    this.state.selectedYear !== new Date().getFullYear()\r\n                )\r\n                .map((day, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className={\r\n                      'day-container d-flex position-relative mb-2 text-left ' +\r\n                      (day.notReallyRed\r\n                        ? 'gray'\r\n                        : day.isSqueezeDay\r\n                        ? 'squeeze'\r\n                        : 'red') +\r\n                      (day.date < new Date() ? ' past-date' : '')\r\n                    }\r\n                  >\r\n                    <div className=\"text-center date-box mr-2\">\r\n                      <h1 className=\"mb-0\">{day.date?.getUTCDate()}</h1>\r\n                      <h4>{svMonthAbbr[day.date.getMonth()]?.toUpperCase()}</h4>\r\n                    </div>\r\n                    <div className=\"date-name\">\r\n                      <h2 className=\"mb-0 pl-3\">{day.name}</h2>\r\n                    </div>\r\n                    <div className=\"day-name\">{day.dayName?.substr(0, 3)}</div>\r\n                  </div>\r\n                ))}\r\n                <div className=\"footer mt-3\">rodadagar.nu visar röda dagar, semi-röda dagar och klämdagar.</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}